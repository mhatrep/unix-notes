Reference: https://lzone.de/cheat-sheet/jq
-----------------------------------------------------

Output Formatting
If you do only care about output formatting (pretty print) run

jq . my.json
Note: for redirection you need to pass a filter too to avoid a syntax error:

jq . my.json > output.json
Simple Extraction
Consider this example document

{
    "timestamp": 1234567890,
    "report": "Age Report",
    "results": [
        { "name": "John", "age": 43, "city": "TownA" },
        { "name": "Joe",  "age": 10, "city": "TownB" }
    ]
}
To extract top level attributes "timestamp" and "report"

jq '.[] | {timestamp,report}'
To extract name and age of each "results" item

jq '.results[] | {name, age}'
Filter this by attribute

jq '.results[] | select(.name == "John") | {age}'      # Get age for 'John'
jq '.results[] | select(.name | contains("Jo"))'       # Get complete records for all names with 'Jo'
jq '.results[] | select(.name | test("Joe\s+Smith"))'  # Get complete records for all names matching PCRE regex 'Joe\+Smith'
Handle Empty Arrays
When you want to iterate and an array you access is empty you get something like

jq: error (at <stdin>:3): Cannot iterate over null (null)
To workaround the optional array protect the access with

select(.my_array | length > 0)
